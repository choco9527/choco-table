@import './variables.scss';

@mixin drag-icon($width){
  height: 6px;
  width: $width;
  position: relative;
  font-size: 10px;
  font-weight: 400;
  opacity: 1;
  background-color: transparent;
  &:before {
    content: '';
    display: inline-block;
    position: absolute;
    width: $width;
    height: 2px;
    background: #D0D3D9;
    border-radius: 2px;
    top: 0;
    left: 0;
  }
  &:after{
    content: '';
    display: inline-block;
    position: absolute;
    bottom: 0;
    left: 0;
    width: $width;
    height: 2px;
    background: #D0D3D9;
    border-radius: 2px;
  }
}

@mixin normal-btn{
  letter-spacing: .5px;
  transition: all .3s cubic-bezier(.645,.045,.355,1);
  outline: none;
  border: 1px solid $border-white-3;
  vertical-align: middle;

  &:not(.text,[disabled]):hover{
    border-color: $lighter-blue;
  }
  &.mini{
    height: 28px;
    padding: 4px 8px;
    font-size: 13px;
  }
  &.small{
    height: 32px;
    padding: 5px 12px;
    font-size: 14px;
  }
  &.primary{
    background-color: $color-primary;
    color: $color-white;
    &:hover{
      background-color: $lighter-blue;
    }
  }
  &.text {
    background-color: transparent;
    color: $color-primary;
    border: none;
    &:hover{
      color: $lighter-blue;
    }
  }
}

$breakpoints: (
  'xs': 'screen and ( min-width: 480px)',
  'sm': 'screen and ( min-width: 768px)',
  'md': 'screen and ( min-width: 992px)',
  'lg': 'screen and ( min-width: 1200px)',
  'mg': 'screen and ( min-width: 1536px)', // 1920 * 0.8
  'xl': 'screen and ( min-width: 1920px)',
) !default;

@mixin respond-to($breakpoint) {
  $query: map-get($breakpoints, $breakpoint);
  @if not $query {
    @error 'No value found for `#{$breakpoint}`. Please make sure it is defined in `$breakpoints` map.';
  }
  @media #{if(type-of($query) == 'string', unquote($query), inspect($query))}
  {
    @content;
  }
}
